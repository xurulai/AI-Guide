services:
  redis:
    image: redis:7.2
    container_name: redis-server
    restart: always
    ports:
      - "6380:6379"  # 宿主机6380端口映射到容器内6379端口
    environment:
      TZ: Asia/Shanghai
    volumes:
      - redis-data:/data  # 数据持久化到卷
    command:
      - redis-server
      - --requirepass
      - redis123  # Redis连接密码

  mysql:
    image: mysql:8.0  # 使用MySQL 8.0镜像（稳定版本）
    container_name: mysql-server
    restart: always
    ports:
      - "3307:3306"  # 宿主机3307端口映射到容器内3306端口（避免与本地MySQL冲突）
    environment:
      TZ: Asia/Shanghai  # 时区设置
      MYSQL_ROOT_PASSWORD: mysql123  # root用户密码
      MYSQL_DATABASE: testdb  # 初始化时自动创建的数据库（可选）
      MYSQL_CHARSET: utf8mb4  # 默认字符集
      MYSQL_COLLATION: utf8mb4_unicode_ci  # 默认排序规则
    volumes:
      - mysql-data:/var/lib/mysql  # 挂载MySQL数据目录（核心数据持久化）
      # 可选：挂载初始化脚本（如需要启动时执行SQL文件，可取消下面注释）
      # - ./mysql-init:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password  # 兼容旧版客户端连接

# 数据卷声明（用于持久化Redis和MySQL数据）
volumes:
  redis-data:
  mysql-data: